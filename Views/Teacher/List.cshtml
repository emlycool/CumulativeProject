@{
    ViewBag.Title = "Teachers";
}

<div class="container">
    <h1>Teacher List</h1>

    <div class="d-flex justify-content-between">
        <!-- Search Bar -->
        <div>
            <input id="search-input" type="text" class="form-control" placeholder="Search teachers...">
        </div>

        <!-- Create Teacher -->
        <div>
            <a class="btn-primary btn" href="/teachers/create">Create Teacher</a>
        </div>
    </div>

    <table id="teachers-table" class="table table-striped">
        <thead>
            <tr>
                <th>ID</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Employee Number</th>
                <th>Hire Date</th>
                <th>Salary</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            <!-- Table body will be dynamically populated -->
        </tbody>
    </table>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const searchInput = document.querySelector("#search-input");
        const tableBody = document.querySelector("#teachers-table tbody");

        // Function to fetch teachers data with optional search query
        function fetchTeachers(searchQuery = "") {
            const url = new URL("/api/teachers", window.location.origin);
            url.searchParams.append("searchQuery", searchQuery);

            tableBody.innerHTML = `<tr><td colspan="7" class="text-center">Please wait ...</td></tr>`;

            fetch(url)
                .then(response => response.json())
                .then(data => {

                    tableBody.innerHTML = "";

                    data.data.forEach(teacher => {
                        const hireDate = new Date(teacher.HireDate);
                        const hireDateString = hireDate.toLocaleDateString();
                        const salaryString = teacher.Salary.toFixed(2);

                        const row = `<tr>
                        <td>${teacher.Id}</td>
                        <td>${teacher.FirstName}</td>
                        <td>${teacher.LastName}</td>
                        <td>${teacher.EmployeeNumber}</td>
                        <td>${hireDateString}</td>
                        <td>$${salaryString}</td>
                        <td>
                            <a class="btn-primary btn" href="/teachers/${teacher.Id}">View</a>
                            <a class="btn-success btn" href="/teachers/edit/${teacher.Id}">Edit</a>
                            <button class="btn-danger btn delete-teacher" data-id="${teacher.Id}">Delete</button>
                        </tr>`;

                        tableBody.innerHTML += row;
                    });

                    // Add event listeners to delete buttons
                    const deleteButtons = document.querySelectorAll(".delete-teacher");
                    deleteButtons.forEach(button => {
                        button.addEventListener("click", function () {
                            const teacherId = this.getAttribute("data-id");
                            if (confirm("Are you sure you want to delete this teacher?")) {
                                deleteTeacher(teacherId);
                            }
                        });
                    });
                })
                .catch(error => {
                    console.error("Error fetching teachers:", error);
                });
        }

        // Function to delete teacher
        function deleteTeacher(teacherId) {
            fetch(`/api/teachers/${teacherId}`, {
                method: 'DELETE'
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Failed to delete teacher');
                    }
                    return response.json();
                })
                .then(data => {
                    console.log('Teacher deleted:', data);
                    alert('Teacher deleted successfully');
                    fetchTeachers(searchInput.value);
                })
                .catch(error => {
                    console.error('Error:', error.message);
                    alert('Failed to delete teacher');
                });
        }

        fetchTeachers();

        searchInput.addEventListener("input", function () {
            fetchTeachers(searchInput.value);
        });

    });
</script>